'''
멀리뛰기에 사용될 칸의 수 : n (1 <= n <= 2000)
효진이가 끝에 도달하는 방법이 몇 가지인지 알아낸 후
1234567을 나눈 나머지를 return

--- 규칙 ---
1 -> 1 (1)
2 -> 1+1, 2 (2)
3 -> 1+1+1, 1+2, 2+1 (3)
4 -> 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2 (5)
5 -> 1+1+1+1+1, 1+1+1+2, 1+1+2+1, 1+2+1+1, 2+1+1+1
        2+2+1, 2+1+2, 1+2+2 (8)

피보나치 수열같은 규칙이 존재
'''

def solution(n):
    if n == 1 :
        return 1
    elif n == 2 :
        return 2 
    
    # Dynamic Programming
    dp = [0, 1, 2]
    
    for i in range(3, n+1) :
        dp.append(dp[i-1] + dp[i-2])
    
    return dp[-1] % 1234567